""" Git """

Git: : It is a configuration management tool. Local repository
GitHub: Remote repository

Git Setup:
1. Open "Git bash" in folder where we want store all our project
2. Initiate: Initialize the repository
    git init
3. Git to GitHub connection
    git remote add origin "URL of git hub project"
4. Git pull: Pull the code from repository
    git pull origin master
5. Git status: List of modified and created files
    git status
6. Git add: To add files
    single file: git add text.py
    all files: git add .
7. Git commit: Commit before push
    git commit -m "commit message"
8. Git Log: See all the commits in logs
    git log
9. Git push: Push the files to repository
    git push origin master
10.


Key Differences between SSH and HTTPS:
4.1. Authentication Method:
SSH: Uses SSH keys for authentication. Users generate a key pair (public and private keys), with the public key stored on GitHub, and the private key kept on their local machine.
HTTPS: Requires either a username and password or a personal access token (PAT) for authentication. PATs are tokens generated from your GitHub account.

4.2 . Cloning and Authentication:
SSH: When cloning a repository using SSH, you don’t need to enter your credentials each time. Authentication is handled automatically using your SSH key.
HTTPS: Requires you to enter your GitHub credentials (username and password or PAT) each time you interact with a repository.








git init : initiate the local repository
git remote add origin "https://github.com/srikanthag/python.git"
git pull origin master
git status: 
git add file path
git commit -m "commiting first file"
git log : check committed files



Git: Git is a free and open source distributed code management and Version control system.

 config: This command sets the author name and email address respectively to be used with your commits.
 git config – global user.name “[name]”
 git config – global user.email “[email address]”

 init: This command is used to start a new repository.
 git init [repository name]

 add: This command adds a file to the staging area.
 git add (file name)

 commit: This command records or snapshots the file permanently in the version history.
 git commit -m “[ Type in the commit message]”

 remote: This command is used to connect your local repository to the remote server.
 git remote add origin https://github.com/srikanthag/TYSS.git

 push: This command sends the committed changes of master branch to your remote repository.
 git push -u origin master

 version
 git --version

 clone: This command is used to obtain a repository from an existing URL.
 git clone [url]

 status: This command lists all the files that have to be committed.
 git status

 git log: This command is used to list the version history for the current branch
 git log

 git pull: This command fetches and merges changes on the remote server to your working directory.
 git pull [Repository Link]

 merge: This command merges the specified branch’s history into the current branch.
 git merge [branch name]

 branch: This command lists all the local branches in the current repository.
 git branch <branch-name>

 Viewing branches
 git branch

 git checkout: This command creates a new branch and also switches to it.
 git checkout <name-of-your-branch>

 revert(undo)
 git revert

 reset
 git reset [file]

 delete: This command deletes the file from your working directory and stages the deletion.
 git rm [file]

 show: show current changes
 git show [commit]

'''git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/srikanthag/new.git
git push -u origin main'''



Version Control System
Version Control System (VCS) is a software that helps software developers to work together and maintain a complete history of their work.
